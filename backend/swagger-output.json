{
  "openapi": "3.0.0",
  "info": {
    "title": "IT Help Desk Ticketing System API",
    "version": "1.0.0",
    "description": "Comprehensive API documentation for the IT Help Desk Ticketing Software Backend",
    "contact": {
      "name": "IT Helpdesk Team",
      "email": "support@ithelpdesk.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "http://localhost:5000",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token in the format: Bearer <token>"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique user identifier",
            "example": "clp123abc456def789"
          },
          "username": {
            "type": "string",
            "description": "Username for login",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address",
            "example": "john.doe@company.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "system_owner",
              "super_admin",
              "admin",
              "it_person",
              "user"
            ],
            "description": "User role in the system",
            "example": "user"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user account is active",
            "example": true
          },
          "businessType": {
            "type": "string",
            "enum": ["small_business", "medium_business", "large_business"],
            "description": "Business type (for super_admin role)",
            "example": "medium_business"
          },
          "accountLimit": {
            "type": "integer",
            "description": "Account limit for super_admin",
            "example": 700
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Account expiry date",
            "example": "2024-12-31T23:59:59Z"
          },
          "location": {
            "type": "string",
            "description": "User location",
            "example": "New York Office"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation timestamp",
            "example": "2024-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User last update timestamp",
            "example": "2024-01-01T00:00:00Z"
          }
        }
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ticket identifier",
            "example": "clp123abc456def789"
          },
          "description": {
            "type": "string",
            "description": "Ticket description",
            "example": "Unable to access company email. Getting authentication error when trying to log in."
          },
          "status": {
            "type": "string",
            "enum": ["pending", "solved"],
            "description": "Current ticket status",
            "example": "pending"
          },
          "notes": {
            "type": "string",
            "description": "Notes added when closing the ticket",
            "example": "Reset password and updated security settings. User can now access email."
          },
          "createdById": {
            "type": "string",
            "description": "ID of user who created the ticket",
            "example": "clp123abc456def789"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "description": "Attachments associated with the ticket"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Ticket creation timestamp",
            "example": "2024-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Ticket last update timestamp",
            "example": "2024-01-01T00:00:00Z"
          }
        }
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique attachment identifier",
            "example": "clp123abc456def789"
          },
          "name": {
            "type": "string",
            "description": "Display name for the attachment",
            "example": "screenshot.png"
          },
          "url": {
            "type": "string",
            "description": "URL/link to the attachment",
            "example": "/uploads/tickets/screenshot_1234567890.png"
          },
          "fileType": {
            "type": "string",
            "description": "File type/extension",
            "example": "image/png"
          },
          "ticketId": {
            "type": "string",
            "description": "Associated ticket ID",
            "example": "clp123abc456def789"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Attachment upload timestamp",
            "example": "2024-01-01T00:00:00Z"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username for authentication",
            "example": "john_doe"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "securePassword123"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["username", "email", "password", "role"],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username for the new user",
            "example": "jane_smith"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address for the new user",
            "example": "jane.smith@company.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the new user",
            "example": "securePassword123"
          },
          "role": {
            "type": "string",
            "enum": [
              "system_owner",
              "super_admin",
              "admin",
              "it_person",
              "user"
            ],
            "description": "Role to assign to the new user",
            "example": "user"
          },
          "ipNumber": {
            "type": "string",
            "description": "IP number for the user",
            "example": "192.168.1.100"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name",
            "example": "LAPTOP-ABC123"
          },
          "deviceIpAddress": {
            "type": "string",
            "description": "Device IP address",
            "example": "192.168.1.100"
          },
          "businessType": {
            "type": "string",
            "enum": ["small_business", "medium_business", "large_business"],
            "description": "Business type (for super_admin role)",
            "example": "medium_business"
          },
          "accountLimit": {
            "type": "integer",
            "description": "Account limit (for super_admin role)",
            "example": 700
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Account expiry date",
            "example": "2024-12-31T23:59:59Z"
          },
          "location": {
            "type": "string",
            "description": "User location",
            "example": "New York Office"
          }
        }
      },
      "CreateTicketRequest": {
        "type": "object",
        "required": ["description"],
        "properties": {
          "description": {
            "type": "string",
            "description": "Detailed description of the issue",
            "example": "Unable to access company email. Getting authentication error when trying to log in."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "File name",
                  "example": "error_screenshot.png"
                },
                "url": {
                  "type": "string",
                  "description": "File URL",
                  "example": "/uploads/tickets/error_screenshot_1234567890.png"
                },
                "fileType": {
                  "type": "string",
                  "description": "File MIME type",
                  "example": "image/png"
                }
              }
            },
            "description": "Attachments to include with the ticket"
          }
        }
      },
      "UpdateTicketRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Updated description of the issue",
            "example": "Updated: Unable to access company email after recent password change."
          },
          "status": {
            "type": "string",
            "enum": ["pending", "solved"],
            "description": "Updated ticket status",
            "example": "pending"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes (required when closing ticket)",
            "example": "Password reset completed. User can now access email."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "File name",
                  "example": "additional_info.pdf"
                },
                "url": {
                  "type": "string",
                  "description": "File URL",
                  "example": "/uploads/tickets/additional_info_1234567890.pdf"
                },
                "fileType": {
                  "type": "string",
                  "description": "File MIME type",
                  "example": "application/pdf"
                }
              }
            },
            "description": "Additional attachments"
          }
        }
      },
      "CloseTicketRequest": {
        "type": "object",
        "required": ["notes"],
        "properties": {
          "notes": {
            "type": "string",
            "description": "Notes explaining the resolution (required)",
            "example": "Issue resolved by resetting user password and updating security settings. User confirmed they can now access email successfully."
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Operation completed successfully"
          }
        }
      },
      "AuthResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "JWT authentication token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              },
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        ]
      },
      "TicketResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "ticket": {
                "$ref": "#/components/schemas/Ticket"
              }
            }
          }
        ]
      },
      "TicketsListResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "tickets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Ticket"
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "description": "Current page number",
                    "example": 1
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Number of items per page",
                    "example": 10
                  },
                  "total": {
                    "type": "integer",
                    "description": "Total number of tickets",
                    "example": 50
                  },
                  "totalPages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "example": 5
                  }
                }
              }
            }
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message",
                "example": "An error occurred"
              },
              "code": {
                "type": "string",
                "description": "Error code",
                "example": "VALIDATION_ERROR"
              },
              "details": {
                "type": "object",
                "description": "Additional error details"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "Tickets",
      "description": "Ticket management endpoints"
    },
    {
      "name": "Health",
      "description": "System health check endpoints"
    }
  ],
  "paths": {
    "/api/archive/tickets": {
      "post": {
        "summary": "Archive old tickets",
        "description": "Archive tickets older than 6 months to the archive database. Only accessible by System Owner.",
        "tags": ["Archive Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tickets archived successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "archivedCount": {
                              "type": "integer",
                              "description": "Number of tickets archived",
                              "example": 45
                            },
                            "message": {
                              "type": "string",
                              "example": "Successfully archived 45 tickets older than 6 months"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only System Owner can perform archiving",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during archiving process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user with username and password",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register new user",
        "description": "Create a new user account (requires authentication and appropriate permissions)",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password", "role"],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username for the new user",
                    "example": "jane_smith"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the new user",
                    "example": "jane.smith@company.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the new user",
                    "example": "securePassword123"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "system_owner",
                      "super_admin",
                      "admin",
                      "it_person",
                      "user"
                    ],
                    "description": "Role to assign to the new user",
                    "example": "user"
                  },
                  "ipNumber": {
                    "type": "string",
                    "description": "IP number for the user",
                    "example": "192.168.1.100"
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "Device name",
                    "example": "LAPTOP-ABC123"
                  },
                  "deviceIpAddress": {
                    "type": "string",
                    "description": "Device IP address",
                    "example": "192.168.1.100"
                  },
                  "businessType": {
                    "type": "string",
                    "enum": [
                      "small_business",
                      "medium_business",
                      "large_business"
                    ],
                    "description": "Business type (for super_admin role)",
                    "example": "medium_business"
                  },
                  "accountLimit": {
                    "type": "integer",
                    "description": "Account limit (for super_admin role)",
                    "example": 700
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account expiry date",
                    "example": "2024-12-31T23:59:59Z"
                  },
                  "location": {
                    "type": "string",
                    "description": "User location",
                    "example": "New York Office"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Username or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refresh authentication token",
        "description": "Get a new JWT token using the current valid token",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "description": "New JWT authentication token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve the authenticated user's profile information",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "User logout",
        "description": "Logout the authenticated user (client-side token removal)",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/metrics": {
      "get": {
        "summary": "Get role-based dashboard metrics",
        "description": "Retrieve dashboard metrics based on the authenticated user's role",
        "tags": ["Dashboard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for filtering (YYYY-MM-DD)",
            "example": "2024-01-01"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for filtering (YYYY-MM-DD)",
            "example": "2024-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard metrics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metrics": {
                          "type": "object",
                          "properties": {
                            "totalUsers": {
                              "type": "integer",
                              "example": 150
                            },
                            "adminCount": {
                              "type": "integer",
                              "example": 5
                            },
                            "itPersonCount": {
                              "type": "integer",
                              "example": 10
                            },
                            "userCount": {
                              "type": "integer",
                              "example": 135
                            },
                            "ticketStats": {
                              "type": "object",
                              "properties": {
                                "totalTickets": {
                                  "type": "integer",
                                  "example": 245
                                },
                                "pendingTickets": {
                                  "type": "integer",
                                  "example": 12
                                },
                                "solvedTickets": {
                                  "type": "integer",
                                  "example": 233
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/system-owner": {
      "get": {
        "summary": "System Owner dashboard",
        "description": "Get comprehensive system overview including Super Admin management and expiry tracking",
        "tags": ["Dashboard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for filtering",
            "example": "2024-01-01"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for filtering",
            "example": "2024-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "System Owner dashboard data retrieved successfully"
          },
          "403": {
            "description": "Forbidden - Only System Owner can access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/super-admin": {
      "get": {
        "summary": "Super Admin dashboard",
        "description": "Get Super Admin specific metrics including account utilization, managed user counts, ticket statistics, and expiry information.",
        "tags": ["Dashboard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for filtering ticket statistics",
            "example": "2024-01-01"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for filtering ticket statistics",
            "example": "2024-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Super Admin dashboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "dashboard": {
                          "type": "object",
                          "properties": {
                            "userCounts": {
                              "type": "object",
                              "properties": {
                                "totalUsers": {
                                  "type": "integer",
                                  "example": 245
                                },
                                "adminCount": {
                                  "type": "integer",
                                  "example": 5
                                },
                                "itPersonCount": {
                                  "type": "integer",
                                  "example": 15
                                },
                                "userCount": {
                                  "type": "integer",
                                  "example": 225
                                }
                              }
                            },
                            "ticketStats": {
                              "type": "object",
                              "properties": {
                                "totalTickets": {
                                  "type": "integer",
                                  "example": 456
                                },
                                "pendingTickets": {
                                  "type": "integer",
                                  "example": 18
                                },
                                "solvedTickets": {
                                  "type": "integer",
                                  "example": 438
                                }
                              }
                            },
                            "accountInfo": {
                              "type": "object",
                              "properties": {
                                "businessType": {
                                  "type": "string",
                                  "enum": [
                                    "small_business",
                                    "medium_business",
                                    "large_business"
                                  ],
                                  "example": "medium_business"
                                },
                                "accountLimit": {
                                  "type": "integer",
                                  "example": 700
                                },
                                "accountUtilization": {
                                  "type": "integer",
                                  "description": "Percentage of account limit used",
                                  "example": 35
                                },
                                "remainingSlots": {
                                  "type": "integer",
                                  "description": "Number of remaining account slots",
                                  "example": 455
                                }
                              }
                            },
                            "expiryInfo": {
                              "type": "object",
                              "properties": {
                                "expiryDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2025-12-31T23:59:59Z"
                                },
                                "daysToExpiry": {
                                  "type": "integer",
                                  "example": 365
                                },
                                "isExpired": {
                                  "type": "boolean",
                                  "example": false
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Super Admin role or above required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/admin": {
      "get": {
        "summary": "Admin dashboard",
        "description": "Get Admin specific metrics including managed IT Person and User counts with ticket tracking capabilities.",
        "tags": ["Dashboard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for filtering ticket statistics",
            "example": "2024-01-01"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for filtering ticket statistics",
            "example": "2024-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Admin dashboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "dashboard": {
                          "type": "object",
                          "properties": {
                            "userCounts": {
                              "type": "object",
                              "properties": {
                                "totalUsers": {
                                  "type": "integer",
                                  "example": 85
                                },
                                "itPersonCount": {
                                  "type": "integer",
                                  "example": 8
                                },
                                "userCount": {
                                  "type": "integer",
                                  "example": 77
                                }
                              }
                            },
                            "ticketStats": {
                              "type": "object",
                              "properties": {
                                "totalTickets": {
                                  "type": "integer",
                                  "example": 234
                                },
                                "pendingTickets": {
                                  "type": "integer",
                                  "example": 12
                                },
                                "solvedTickets": {
                                  "type": "integer",
                                  "example": 222
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin role or above required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/it-person": {
      "get": {
        "summary": "IT Person dashboard",
        "description": "Get IT Person specific metrics including managed User counts and assigned ticket overview.",
        "tags": ["Dashboard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for filtering ticket statistics",
            "example": "2024-01-01"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for filtering ticket statistics",
            "example": "2024-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "IT Person dashboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "dashboard": {
                          "type": "object",
                          "properties": {
                            "userCounts": {
                              "type": "object",
                              "properties": {
                                "totalUsers": {
                                  "type": "integer",
                                  "example": 25
                                },
                                "userCount": {
                                  "type": "integer",
                                  "example": 25
                                }
                              }
                            },
                            "ticketStats": {
                              "type": "object",
                              "properties": {
                                "totalTickets": {
                                  "type": "integer",
                                  "example": 67
                                },
                                "pendingTickets": {
                                  "type": "integer",
                                  "example": 4
                                },
                                "solvedTickets": {
                                  "type": "integer",
                                  "example": 63
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - IT Person role or above required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets": {
      "post": {
        "summary": "Create a new ticket",
        "description": "Create a new support ticket with optional file attachments. Available to users and IT personnel.",
        "tags": ["Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the issue",
                    "example": "Unable to access company email. Getting authentication error when trying to log in."
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Attachment files (max 25MB each, formats: JPEG, PNG, PDF, TXT)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ticket created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "413": {
            "description": "File too large (exceeds 25MB limit)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all tickets",
        "description": "Retrieve tickets with pagination. Users see only their own tickets, IT personnel see all tickets.",
        "tags": ["Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of tickets per page",
            "example": 10
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["pending", "solved"]
            },
            "description": "Filter tickets by status",
            "example": "pending"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter tickets created from this date (YYYY-MM-DD)",
            "example": "2024-01-01"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter tickets created until this date (YYYY-MM-DD)",
            "example": "2024-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Tickets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}": {
      "get": {
        "summary": "Get ticket by ID",
        "description": "Retrieve a specific ticket by its ID. Users can only view their own tickets, IT personnel can view any ticket.",
        "tags": ["Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique ticket identifier",
            "example": "clp123abc456def789"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions or not ticket owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update ticket",
        "description": "Update ticket details including description and attachments. Users can only update their own pending tickets.",
        "tags": ["Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique ticket identifier",
            "example": "clp123abc456def789"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Updated description of the issue",
                    "example": "Updated description with more details about the email access issue"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "File name",
                          "example": "updated_screenshot.png"
                        },
                        "url": {
                          "type": "string",
                          "description": "File URL",
                          "example": "/uploads/tickets/updated_screenshot_1234567890.png"
                        },
                        "fileType": {
                          "type": "string",
                          "description": "File MIME type",
                          "example": "image/png"
                        }
                      }
                    },
                    "description": "Updated attachments"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Updated description of the issue"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "New attachment files"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ticket updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Cannot update this ticket (not owner or ticket already solved)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/close": {
      "patch": {
        "summary": "Close ticket",
        "description": "Close a ticket and mark it as solved. Only IT personnel can close tickets. Notes are required when closing.",
        "tags": ["Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique ticket identifier",
            "example": "clp123abc456def789"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["notes"],
                "properties": {
                  "notes": {
                    "type": "string",
                    "description": "Notes explaining the resolution (required)",
                    "example": "Issue resolved by resetting user password and updating security settings. User confirmed they can now access email successfully."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ticket closed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TicketResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Ticket closed successfully"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or missing notes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only IT personnel can close tickets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Ticket is already closed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/reopen": {
      "patch": {
        "summary": "Reopen ticket",
        "description": "Reopen a closed ticket and mark it as pending. Only IT personnel can reopen tickets.",
        "tags": ["Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique ticket identifier",
            "example": "clp123abc456def789"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket reopened successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TicketResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Ticket reopened successfully"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only IT personnel can reopen tickets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Ticket is already open",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/create-super-admin": {
      "post": {
        "summary": "Create Super Admin account",
        "description": "Create a new Super Admin account with business type and account limits. Only System Owner can create Super Admins.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "email",
                  "password",
                  "businessType",
                  "location"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username for the Super Admin",
                    "example": "superadmin_company1"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the Super Admin",
                    "example": "superadmin@company.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the Super Admin",
                    "example": "SecurePass123!"
                  },
                  "businessType": {
                    "type": "string",
                    "enum": [
                      "small_business",
                      "medium_business",
                      "large_business"
                    ],
                    "description": "Business type that determines account limits",
                    "example": "medium_business"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account expiry date",
                    "example": "2025-12-31T23:59:59Z"
                  },
                  "location": {
                    "type": "string",
                    "description": "Super Admin location/office",
                    "example": "New York Headquarters"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Super Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only System Owner can create Super Admins",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Username or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/create-admin": {
      "post": {
        "summary": "Create Admin account",
        "description": "Create a new Admin account. Only Super Admins can create Admin accounts, subject to their account limits.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username for the Admin",
                    "example": "admin_dept1"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the Admin",
                    "example": "admin@company.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the Admin",
                    "example": "SecurePass123!"
                  },
                  "ipNumber": {
                    "type": "string",
                    "description": "IP number for the Admin",
                    "example": "192.168.1.10"
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "Device name",
                    "example": "ADMIN-LAPTOP-01"
                  },
                  "deviceIpAddress": {
                    "type": "string",
                    "description": "Device IP address",
                    "example": "192.168.1.10"
                  },
                  "location": {
                    "type": "string",
                    "description": "Admin location/department",
                    "example": "IT Department"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only Super Admins can create Admins or account limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Username or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/create-it-person": {
      "post": {
        "summary": "Create IT Person account",
        "description": "Create a new IT Person account. Admins and higher roles can create IT Person accounts.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username for the IT Person",
                    "example": "itperson_support1"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the IT Person",
                    "example": "itperson@company.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the IT Person",
                    "example": "SecurePass123!"
                  },
                  "ipNumber": {
                    "type": "string",
                    "description": "IP number for the IT Person",
                    "example": "192.168.1.20"
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "Device name",
                    "example": "IT-SUPPORT-01"
                  },
                  "deviceIpAddress": {
                    "type": "string",
                    "description": "Device IP address",
                    "example": "192.168.1.20"
                  },
                  "location": {
                    "type": "string",
                    "description": "IT Person location/department",
                    "example": "Help Desk - Floor 2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "IT Person created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only Admins and above can create IT Persons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Username or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/create-user": {
      "post": {
        "summary": "Create User account",
        "description": "Create a new User account. IT Persons and higher roles can create User accounts.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "email",
                  "password",
                  "ipNumber",
                  "deviceName"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username for the User",
                    "example": "user_john_doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the User",
                    "example": "john.doe@company.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the User",
                    "example": "SecurePass123!"
                  },
                  "ipNumber": {
                    "type": "string",
                    "description": "IP number for the User (required)",
                    "example": "192.168.1.100"
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "Device name (required)",
                    "example": "LAPTOP-JOHN-01"
                  },
                  "deviceIpAddress": {
                    "type": "string",
                    "description": "Device IP address",
                    "example": "192.168.1.100"
                  },
                  "location": {
                    "type": "string",
                    "description": "User location/department",
                    "example": "Marketing Department"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only IT Persons and above can create Users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Username or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/my-users": {
      "get": {
        "summary": "Get users created by current user with advanced filtering",
        "description": "Retrieve all users created by the authenticated user with pagination, search, and filtering capabilities.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of users per page",
            "example": 10
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": ["super_admin", "admin", "it_person", "user"]
            },
            "description": "Filter users by role",
            "example": "user"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search by username, email, or device name",
            "example": "john"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "string",
              "enum": [true, false]
            },
            "description": "Filter by active status",
            "example": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer",
                              "example": 1
                            },
                            "limit": {
                              "type": "integer",
                              "example": 10
                            },
                            "total": {
                              "type": "integer",
                              "example": 25
                            },
                            "totalPages": {
                              "type": "integer",
                              "example": 3
                            },
                            "hasNextPage": {
                              "type": "boolean",
                              "example": true
                            },
                            "hasPreviousPage": {
                              "type": "boolean",
                              "example": false
                            }
                          }
                        },
                        "filters": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "example": "user"
                            },
                            "search": {
                              "type": "string",
                              "example": "john"
                            },
                            "isActive": {
                              "type": "string",
                              "example": "true"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID. Users can only access their own profile or users they created.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID",
            "example": "clp123abc456def789"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Cannot access this user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the current status of the API server",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API is running successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Current server timestamp",
                          "example": "2024-01-01T00:00:00.000Z"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
